from typing import List

from fastapi import Depends
from fastapi.routing import APIRoute

from api.dependencies import check_film_exists, check_review_exists
from api.v1 import bookmarks, ratings, reviews
from models.responses import BookmarkResponse, RatingResponse, ReviewResponse

routes = [
    APIRoute(
        path='/bookmarks',
        methods=['GET'],
        summary='Просмотр списка закладок',
        response_description='Закладки пользователя (отложенные на потом фильмы)',
        endpoint=bookmarks.get_user_bookmarks,
        response_model=List[BookmarkResponse],
        response_model_by_alias=False,
        tags=['bookmarks'],
    ),
    APIRoute(
        path='/films/{film_id}/bookmarks',
        methods=['POST'],
        summary='Добавление фильма в закладки',
        response_description='Закладки пользователя (отложенные на потом фильмы)',
        endpoint=bookmarks.bookmark_film,
        response_model=List[BookmarkResponse],
        response_model_by_alias=False,
        dependencies=[Depends(check_film_exists)],
        tags=['bookmarks'],
    ),
    APIRoute(
        path='/films/{film_id}/bookmarks',
        methods=['DELETE'],
        summary='Удаление фильма из закладок',
        response_description='Закладки пользователя (отложенные на потом фильмы)',
        endpoint=bookmarks.unbookmark_film,
        response_model=List[BookmarkResponse],
        response_model_by_alias=False,
        dependencies=[Depends(check_film_exists)],
        tags=['bookmarks'],
    ),
    APIRoute(
        path='/films/{film_id}/ratings',
        methods=['GET'],
        summary='Просмотр рейтинга фильма',
        response_description='Рейтинг фильма (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.get_film_rating,
        response_model=RatingResponse,
        response_model_by_alias=False,
        tags=['film_rating'],
    ),
    APIRoute(
        path='/films/{film_id}/ratings',
        methods=['POST'],
        summary='Добавление оценки фильму',
        response_description='Рейтинг фильма (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.rate_film,
        response_model=RatingResponse,
        response_model_by_alias=False,
        tags=['film_rating'],
    ),
    APIRoute(
        path='/films/{film_id}/ratings',
        methods=['DELETE'],
        summary='Удаление оценки у фильма',
        response_description='Рейтинг фильма (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.unrate_film,
        response_model=RatingResponse,
        response_model_by_alias=False,
        tags=['film_rating'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews',
        methods=['GET'],
        summary='Просмотр списка рецензий',
        response_description='Список рецензий на фильм',
        endpoint=reviews.get_film_reviews,
        response_model=List[ReviewResponse],
        response_model_by_alias=False,
        tags=['reviews'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews',
        methods=['POST'],
        summary='Добавление рецензии к фильму',
        response_description='Рецензия на фильм',
        endpoint=reviews.create_film_review,
        response_model=ReviewResponse,
        response_model_by_alias=False,
        response_model_exclude_none=True,
        dependencies=[Depends(check_film_exists)],
        tags=['reviews'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews/{review_id}',
        methods=['DELETE'],
        summary='Удаление рецензии у фильма',
        response_description='Рецензия на фильм',
        endpoint=reviews.delete_film_review,
        dependencies=[Depends(check_film_exists), Depends(check_review_exists)],
        tags=['reviews'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews/{review_id}/ratings',
        methods=['GET'],
        summary='Просмотр рейтинга рецензии',
        response_description='Рейтинг рецензии (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.get_review_rating,
        response_model=RatingResponse,
        response_model_by_alias=False,
        dependencies=[Depends(check_film_exists)],
        tags=['review_rating'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews/{review_id}/ratings',
        methods=['POST'],
        summary='Добавление оценки рецензии',
        response_description='Рейтинг рецензии (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.rate_review,
        response_model=RatingResponse,
        response_model_by_alias=False,
        dependencies=[Depends(check_film_exists)],
        tags=['review_rating'],
    ),
    APIRoute(
        path='/films/{film_id}/reviews/{review_id}/ratings',
        methods=['DELETE'],
        summary='Удаление оценки у рецензии',
        response_description='Рейтинг рецензии (лайки, дизлайки и средняя оценка)',
        endpoint=ratings.unrate_review,
        response_model=RatingResponse,
        response_model_by_alias=False,
        dependencies=[Depends(check_film_exists)],
        tags=['review_rating'],
    ),
]
